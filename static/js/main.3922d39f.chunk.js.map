{"version":3,"sources":["components/Navbar/Navbar.js","components/Container/Container.js","components/Cards/Cards.js","components/ScoreCard/ScoreCard.js","App.js","index.js"],"names":["Styles","Navbar","font-size","text-align","font-family","props","react_default","a","createElement","class","className","style","Container","_ref","children","cardStyle","Card","width","height","imageSize","id","src","alt","onClick","handleClick","ScoreCard","score","hiScore","App","state","images","clicked","shuffle_cards","map","Math","random","sort","b","_this","indexOf","handle_score","setState","concat","game_over","console","log","updateScore","alert","cars","_this2","this","components_Navbar_Navbar","components_ScoreCard_ScoreCard","components_Container_Container","elem","Cards","key","handleScore","endGame","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3922d39f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Navbar.css\";\n\n\nconst Styles = {\n    Navbar: {\n        \"font-size\": \"30px\",\n        \"text-align\": \"center\",\n        \"font-family\": \"Arial\"\n    }\n}\nconst Navbar = props => (\n<div class=\"row\">\n    <nav className=\"blue lighten-5\">\n    <ul>\n        <div className=\"logo center-align black-text\" style={Styles.Navbar}>Click car</div>\n    </ul>\n    </nav>\n</div>\n\n)\n\nexport default Navbar","import React from \"react\";\n\nconst Container = ({ children }) => (\n    \n    <div className={`container`}>\n        { children }\n    </div>\n);\n\nexport default Container;\n\n\n\n\n\n\n    // constructor(props) {\n    //     super(props);\n\n    //     this.state = {\n    //         score: 1,\n    //         cars: Cars,\n    //         selected: []\n    //     };\n    //     console.log(this.state.selected)\n    // }\n\n    // handleClick = e => {\n    //     console.log('')\n    //     let id = e.target.id;\n    //     let exists = false;\n    //     console.log(id)\n    //     this.state.selected.map(cars => {\n    //         console.log(this.state.selected)\n    //         if (cars.id === id) {\n    //             console.log('here')\n    //             exists = true;\n    //             console.log('inblock', exists)\n    //         }\n    //         return exists\n    //     });\n\n    //     //   console.log(exists)\n\n    //     if (exists) {\n    //         this.game_over();\n    //     } else {\n    //         this.state.cars.forEach(elem => {\n\n    //             if (elem.id === id) {\n    //                 this.setState({\n    //                     selected: [...this.state.selected, elem]\n    //                 });\n    //                 console.log('select', this.state.selected);\n    //                 this.update_score();\n    //             }\n    //         })\n    //     }\n    //     // do da shuffling\n    // }\n    // update_score = () => {\n\n    //     this.setState({\n    //         score: this.state.score + 1\n    //     });\n\n\n    //     this.props.updateCurrScore(this.state.score);\n    //     console.log(\"Score: \" + this.state.score);\n\n    // };\n\n    // game_over = () => {\n    //     this.props.updateTop(this.state.score)\n\n    //     this.setState({\n    //         score: 1,\n    //         selected: []\n    //     });\n    //     this.update_score(0);\n\n\n    // }\n","import React from \"react\";\n\nconst cardStyle = {\n    Card: {\n        width: '125px',\n        height: '125px',\n        // margin: '15px 15px 15px 15px'\n    }\n}\n\nconst imageSize = {\n    Card: {\n        width: \"125px\",\n        height: \"125px\"\n    }\n}\n\nconst Card = props => (\n\n  <div className=\"container\">\n    <div className=\"col s6 l3\">\n        <div className=\"row\">\n            <div className=\"card hoverable\" id={props.id} style={cardStyle.Card}>\n                <img className=\"ImageBox\" src={props.src}\n                    alt={props.alt}\n                    style={imageSize.Card}\n                    onClick={() => props.handleClick(props.id)}\n                />\n            </div>\n        </div>\n    </div>\n    </div>\n)\n\nexport default Card;\n\n","import React from \"react\";\n\nconst ScoreCard = props => (\n    \n    <div className=\"container\">\n        <div class=\"card grey lighten-3 z-depth-4\">\n            <div className=\"center-align\">Current Score: {props.score}</div>\n            <div className=\"center-align\">Top Score: {props.hiScore}</div>\n        </div>\n </div>\n)\n\nexport default ScoreCard","import React, { Component } from 'react';\nimport images from \"./data.json\"\nimport Navbar from \"./components/Navbar\"\nimport Container from \"./components/Container\"\nimport Card from \"./components/Cards\"\nimport Scores from \"./components/ScoreCard\"\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    images,\n    score: 0,\n    hiScore: 0,\n    clicked: []\n  }\n \n  //tanx josh, <3 you vvvv\n  shuffle_cards = images => {\n    const shuffled = images.map(a => [Math.random(), a])\n      .sort((a, b) => a[0] - b[0])\n      .map(a => a[1]);\n    //console.log(shuffled);\n    return shuffled;\n  }\n\n  handleClick = id => {\n\n    if (this.state.clicked.indexOf(id) === -1) {\n     \n      this.handle_score();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n  \n    } else {\n      this.game_over();\n    }\n    };\n\n  handle_score = () => {\n    console.log(this.state.hiScore)\n    const updateScore = this.state.score + 1;\n    this.setState({\n      images: this.shuffle_cards(images),\n      score: updateScore,\n    });\n\n    if (updateScore >= this.state.hiScore) {\n      this.setState({ hiScore: updateScore });\n    } else if (updateScore === 12) {\n      alert(\"You win!\")\n    }\n  }\n\n  game_over = () => {\n    this.setState({\n      score: 0,\n      hiScore: this.state.score,\n      clicked: [],\n      cars: this.shuffle_cards(images)\n    })\n    alert(\"game over\");\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar\n          score={this.state.score}\n          hiScore={this.state.hiScore}\n        />\n        <Scores\n          score={this.state.score}\n          hiScore={this.state.hiScore}\n        />\n        <Container>\n          <div className=\"row col s3 m4\">\n            {this.state.images.map(elem => <Card\n              key={elem.id}\n              src={elem.images}\n              id={elem.id}\n              handleClick={this.handleClick}\n              handleScore={this.handle_score}\n              endGame={this.game_over}\n              score={this.state.score}\n              hiScore={this.state.handle_score} />)}\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as registerServiceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n//registerServiceWorker();"],"sourceRoot":""}